// This file was generated by counterfeiter
package projectfakes

import (
	"sync"

	"github.com/BenChapman/mobile_api/project"
)

type FakeProjectRepository struct {
	GetStub        func(int) (project.ProjectDetails, error)
	getMutex       sync.RWMutex
	getArgsForCall []struct {
		arg1 int
	}
	getReturns struct {
		result1 project.ProjectDetails
		result2 error
	}
	GetAllStub        func() ([]project.ProjectDetails, error)
	getAllMutex       sync.RWMutex
	getAllArgsForCall []struct{}
	getAllReturns     struct {
		result1 []project.ProjectDetails
		result2 error
	}
	invocations map[string][][]interface{}
}

func (fake *FakeProjectRepository) Get(arg1 int) (project.ProjectDetails, error) {
	fake.getMutex.Lock()
	fake.getArgsForCall = append(fake.getArgsForCall, struct {
		arg1 int
	}{arg1})
	fake.guard("Get")
	fake.invocations["Get"] = append(fake.invocations["Get"], []interface{}{arg1})
	fake.getMutex.Unlock()
	if fake.GetStub != nil {
		return fake.GetStub(arg1)
	} else {
		return fake.getReturns.result1, fake.getReturns.result2
	}
}

func (fake *FakeProjectRepository) GetCallCount() int {
	fake.getMutex.RLock()
	defer fake.getMutex.RUnlock()
	return len(fake.getArgsForCall)
}

func (fake *FakeProjectRepository) GetArgsForCall(i int) int {
	fake.getMutex.RLock()
	defer fake.getMutex.RUnlock()
	return fake.getArgsForCall[i].arg1
}

func (fake *FakeProjectRepository) GetReturns(result1 project.ProjectDetails, result2 error) {
	fake.GetStub = nil
	fake.getReturns = struct {
		result1 project.ProjectDetails
		result2 error
	}{result1, result2}
}

func (fake *FakeProjectRepository) GetAll() ([]project.ProjectDetails, error) {
	fake.getAllMutex.Lock()
	fake.getAllArgsForCall = append(fake.getAllArgsForCall, struct{}{})
	fake.guard("GetAll")
	fake.invocations["GetAll"] = append(fake.invocations["GetAll"], []interface{}{})
	fake.getAllMutex.Unlock()
	if fake.GetAllStub != nil {
		return fake.GetAllStub()
	} else {
		return fake.getAllReturns.result1, fake.getAllReturns.result2
	}
}

func (fake *FakeProjectRepository) GetAllCallCount() int {
	fake.getAllMutex.RLock()
	defer fake.getAllMutex.RUnlock()
	return len(fake.getAllArgsForCall)
}

func (fake *FakeProjectRepository) GetAllReturns(result1 []project.ProjectDetails, result2 error) {
	fake.GetAllStub = nil
	fake.getAllReturns = struct {
		result1 []project.ProjectDetails
		result2 error
	}{result1, result2}
}

func (fake *FakeProjectRepository) Invocations() map[string][][]interface{} {
	return fake.invocations
}

func (fake *FakeProjectRepository) guard(key string) {
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
}

var _ project.ProjectRepository = new(FakeProjectRepository)
